<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://code.alibabatech.com/schema/dubbo 
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    
    
    <!-- 
    	该配置文件用于配置springmvc
    	包括处理器映射器、处理器适配器、视图解析器、Handler
     -->
    
    
   
    <!-- 开启注解扫描，使用spring组件扫描，即可不需要配置多个Handler
    	多个包之间用逗号隔开
     -->
    <context:component-scan base-package="vvr.ssm.controller"/>
    
    <!-- 使用annotation-driven可以替代下面的映射器和处理器的配置 -->
    <!-- <mvc:annotation-driven></mvc:annotation-driven> -->
    
    <!-- 配置注解处理器映射器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    
    
    <!-- 配置注解处理器适配器
    	该适配器必须与RequestMappingHandlerMapping处理器映射器一起使用
     -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    	<!-- 在注解适配器中注入Converter转换器 -->
    	<property name="webBindingInitializer" ref="customerBinder"/>
    	
    	<!-- json解析器 -->
    	<property name="messageConverters">
    		<list>
    			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
    		</list>
    	</property>
    </bean>
    
    <!-- 自定义webBinder -->
    <bean id="customerBinder" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
    	<!-- 注入转换器 -->
    	<property name="conversionService" ref="conversionService"/>
    	<!-- 配置validation校验 ,validator是ConfigurableWebBindingInitializer的属性-->
    	<property name="validator" ref="validator"/>
    </bean>
    
    <!-- conversionService -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<property name="converters">
    		<list>
    			<!-- list集合代表可以注入多个自定义的转换器，converter是springMVC后期常用的 -->
    			<bean class="vvr.ssm.controller.converter.CustomerDateConverter"/>
    			<bean class="vvr.ssm.controller.converter.StringTrimConverter"/>
    		</list>
    	</property>
    </bean>
    
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    	<!-- 指定提供validation的类，这里由hibernate提供 -->
    	<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    	<!-- 指定校验使用的资源文件，如果不指定，则默认使用classpath下的 ValidationMessages.properties-->
    	<property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
    <!-- 校验错误文件配置 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<!-- 资源文件名 -->
    	<property name="basenames">
    		<list>
    			<value>
    				classpath:CustomValidationMessages
    			</value>
    		</list>
    	</property>
    	<!-- 资源文件编码格式 -->
    	<property name="fileEncodings" value="utf-8"/>
    	<!-- 对资源文件内容缓存时间，单位毫秒 -->
    	<property name="cacheSeconds" value="120"/>
    </bean>
    
    
    <!-- 配置视图解析器 
    	要求将jstl包加到classpath下
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<!-- 配置逻辑视图名的前缀和后缀 -->
    	<!-- 前缀 -->
    	<property name="prefix" value="/WEB-INF/jsp/"/>
    	
    	<!-- 后缀 -->
    	<property name="suffix" value=".jsp"/>
    </bean>
    
    
    <!-- 文件上传,配置文件上传解析器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- 设置上传文件的最大尺寸为5MB -->
    	<property name="maxUploadSize">
    		<value>5242880</value>
    	</property>
    	
    	<!-- 请求的编码格式，默认为ISO8859-1 -->
    	<property name="defaultEncoding">
    		<value>UTF-8</value>
    	</property>
    	
    	<!-- 指定上传文件的临时目录 -->
    	<!-- <property name="uploadTempDir">
    		<value></value>
    	</property> -->
    </bean>
    
</beans>